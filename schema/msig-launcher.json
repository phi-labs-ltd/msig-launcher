{
  "contract_name": "msig-launcher",
  "contract_version": "0.1.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "required": [
      "code_ids"
    ],
    "properties": {
      "code_ids": {
        "$ref": "#/definitions/MSigCodeIds"
      }
    },
    "additionalProperties": false,
    "definitions": {
      "MSigCodeIds": {
        "type": "object",
        "required": [
          "cw4",
          "main",
          "pre_proposal",
          "proposal",
          "voting"
        ],
        "properties": {
          "cw4": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "main": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "pre_proposal": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "proposal": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "voting": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      }
    }
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "instantiate"
        ],
        "properties": {
          "instantiate": {
            "type": "object",
            "required": [
              "description",
              "max_voting_period",
              "members",
              "min_voting_period",
              "name"
            ],
            "properties": {
              "description": {
                "type": "string"
              },
              "image_url": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "max_voting_period": {
                "description": "Time in seconds",
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "members": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Member"
                }
              },
              "min_voting_period": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "name": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "Member": {
        "description": "A group member has a weight associated with them. This may all be equal, or may have meaning in the app that makes use of the group (eg. voting power)",
        "type": "object",
        "required": [
          "addr",
          "weight"
        ],
        "properties": {
          "addr": {
            "type": "string"
          },
          "weight": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "code_ids"
        ],
        "properties": {
          "code_ids": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "m_sigs"
        ],
        "properties": {
          "m_sigs": {
            "type": "object",
            "required": [
              "pagination"
            ],
            "properties": {
              "pagination": {
                "$ref": "#/definitions/Pagination"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "Addr": {
        "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
        "type": "string"
      },
      "Pagination": {
        "type": "object",
        "required": [
          "user"
        ],
        "properties": {
          "limit": {
            "type": [
              "integer",
              "null"
            ],
            "format": "uint8",
            "minimum": 0.0
          },
          "start_at": {
            "type": [
              "integer",
              "null"
            ],
            "format": "uint64",
            "minimum": 0.0
          },
          "user": {
            "$ref": "#/definitions/Addr"
          }
        },
        "additionalProperties": false
      }
    }
  },
  "migrate": null,
  "sudo": null,
  "responses": {
    "code_ids": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "MSigCodeIds",
      "type": "object",
      "required": [
        "cw4",
        "main",
        "pre_proposal",
        "proposal",
        "voting"
      ],
      "properties": {
        "cw4": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "main": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "pre_proposal": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "proposal": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "voting": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "m_sigs": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PageResult",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MSig"
          }
        },
        "next": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        }
      },
      "additionalProperties": false,
      "definitions": {
        "MSig": {
          "type": "object",
          "required": [
            "cw4_contract",
            "dao_dao_contract",
            "pre_propose_contract",
            "proposal_contract",
            "voting_contract"
          ],
          "properties": {
            "cw4_contract": {
              "type": "string"
            },
            "dao_dao_contract": {
              "description": "Multisig creator",
              "type": "string"
            },
            "pre_propose_contract": {
              "type": "string"
            },
            "proposal_contract": {
              "type": "string"
            },
            "voting_contract": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}
